name: Build Latest

on: [push,workflow_dispatch]

env:
  DOTNET_SDK_VERSION: '8.0.*'

jobs:

  build-win-x64-arm64:
    
    runs-on: windows-latest
    
    steps:
      
      - uses: actions/checkout@v1

      - name: Set up dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}

      - run: dotnet publish BBDown -r win-x64 -c Release -o artifact-x64
      - run: dotnet publish BBDown -r win-arm64 -c Release -o artifact-arm64

      - name: Upload Artifact[win-x64]
        uses: actions/upload-artifact@v3
        with:
          name: BBDown_win-x64
          path: artifact-x64\BBDown.exe

      - name: Upload Artifact[win-arm64]
        uses: actions/upload-artifact@v3
        with:
          name: BBDown_win-arm64
          path: artifact-arm64\BBDown.exe
  

  build-linux-x64:
    
    runs-on: ubuntu-latest
    container: ubuntu:18.04
    
    steps:
      
      - run: apt-get update
      - run: apt-get install -y curl wget
      - uses: actions/checkout@v1
      - name: Set up dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}
      - run: apt-get install -y libicu-dev libcurl4-openssl-dev zlib1g-dev libkrb5-dev
      - run: dotnet publish BBDown -r linux-x64 -c Release -o artifact
      
      - name: Upload Artifact[linux-x64]
        uses: actions/upload-artifact@v3
        with:
          name: BBDown_linux-x64
          path: artifact/BBDown

  build-linux-arm64:
    
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-cross-arm64-20220312201346-b2c2436
    
    steps:
      
      - uses: actions/checkout@v1
      - name: Set up dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}
      - run: dotnet publish BBDown -r linux-arm64 -c Release -p:StripSymbols=true -p:CppCompilerAndLinker=clang-9 -p:SysRoot=/crossrootfs/arm64 -o artifact
      
      - name: Upload Artifact[linux-arm64]
        uses: actions/upload-artifact@v3
        with:
          name: BBDown_linux-arm64
          path: artifact/BBDown
          
  build-mac-x64-arm64:
    
    runs-on: macOS-latest
    
    steps:
      
      - uses: actions/checkout@v1
      
      - name: Set up dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}
      - run: dotnet publish BBDown -r osx-arm64 -c Release -o artifact-arm64
      - run: dotnet publish BBDown -r osx-x64 -c Release -o artifact-x64

      
      - name: Upload Artifact[osx-x64]
        uses: actions/upload-artifact@v3
        with:
          name: BBDown_osx-x64
          path: artifact-x64/BBDown
          
      - name: Upload Artifact[osx-arm64]
        uses: actions/upload-artifact@v3
        with:
          name: BBDown_osx-arm64
          path: artifact-arm64/BBDown

  publish-release:
    runs-on: ubuntu-latest
    needs: [build-win-x64-arm64, build-linux-x64, build-linux-arm64, build-mac-x64-arm64]
    steps:

      - uses: actions/checkout@v1

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: actions

      - name: Generate release tag
        id: tag
        env:
          TZ: Asia/Shanghai
        run: |
          echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
          echo "RELEASE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
          touch release.txt
          echo "${{ github.sha }}" >> release.txt
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Pack artifacts
        env:
          RELEASE_DATE: ${{ env.RELEASE_DATE }}
        run: |
          ls -R actions
          for dir in actions/*; do
            if [ -d "$dir" ]; then
              zip -r "${dir}_${RELEASE_DATE}.zip" "$dir"
            fi
          done

      - name: Upload to release
        uses: softprops/action-gh-release@master
        if: steps.tag.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: actions/*.zip